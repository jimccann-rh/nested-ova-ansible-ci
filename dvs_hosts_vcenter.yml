---
- name: "Create dvSwitch"
  module_defaults:
    group/vmware:
      hostname: "{{ hostvars[groups['vc'][vcenter_idx]].NESTEDVMIP }}"
      username: 'administrator@{{ vc_fact_domain }}'
      password: "{{ vc_fact_password }}"
      validate_certs: false
  block:
    - name: Get vCenter index in platform spec
      ansible.builtin.set_fact:
        vcenter_datacenters: "{{ platform_spec_vcenters_loop_var.datacenters }}"
      when: "platform_spec_vcenters_loop_var.server == vcenter"
      loop: "{{ platform_spec.platform.vsphere.vcenters }}"
      loop_control:
        loop_var: platform_spec_vcenters_loop_var

    - name: "Create dvSwitch"
      community.vmware.vmware_dvswitch:
        datacenter: "{{ dc_loop_var }}"
        switch: "dvSwitch-nested-{{ dc_loop_var }}"
        version: 6.6.0
        mtu: 9000
        uplink_quantity: 1
        state: present
      run_once: true
      loop: "{{ vcenter_datacenters }}"
      loop_control:
        loop_var: "dc_loop_var"

    - name: Time out to process
      ansible.builtin.pause:
        seconds: 10

    - name: Get hosts in vCenter
      ansible.builtin.set_fact:
        vcenter_hosts: "{{ vc_vcenter_host_map[vcenter] | list }}"

    - name: Hosts associated with vCenter
      ansible.builtin.debug:
        msg: "{{ vcenter_hosts }}"

    - name: "Add Host to dVS dvSwitch-nested"
      community.vmware.vmware_dvs_host:
        esxi_hostname: "{{ hostvars[groups['esxi'][fd_idx]].NESTEDVMIP }}"
        switch_name: "dvSwitch-nested-{{ item.topology.datacenter }}"
        vmnics:
          - vmnic1
        state: present
      when: "item.server == vcenter"
      loop: "{{ host_indexed_failure_domains }}"
      loop_control:
        index_var: "fd_idx"

    - name: Time out to process
      ansible.builtin.pause:
        seconds: 10

    - name: Create no-vlan portgroup
      community.vmware.vmware_dvs_portgroup:
        portgroup_name: "{{ vc_fact_deployment_network }}"
        switch_name: "dvSwitch-nested-{{ item.topology.datacenter }}"
        vlan_id: 0
        num_ports: 120
        port_binding: static
        state: present
      when: "item.server == vcenter"
      loop: "{{ host_indexed_failure_domains }}"
      loop_control:
        index_var: "fd_idx"
