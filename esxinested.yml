---

- name: List hosts in ESXi
  ansible.builtin.debug:
    msg: "Host: {{ item }}"
  loop: "{{ groups['esxi'] }}"

- name: Set esxi name
  ansible.builtin.set_fact:
    host_fact_hostname: "{{ hostvars[groups['esxi'][my_idx]].inventory_hostname }}"

- name: ESXi Exists
  block:
    - name: ESXi hardware
      ansible.builtin.debug:
        msg: "Memory: {{ esximemory }}MB - CPU: {{ esxicpu }}"

    - name: "DELETE virtual machine version"
      community.vmware.vmware_guest:
        datacenter: "{{ vc_datacenter }}"
        folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: absent
        force: true
      when: testingesxi | bool

    - name: "Does ESXi virtual machine exist"
      community.vmware.vmware_guest:
        datacenter: "{{ vc_datacenter }}"
        folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: present

    - name: "Does ESXi virtual machine exist get ip"
      community.vmware.vmware_guest_info:
        datacenter: "{{ vc_datacenter }}"
        name: "{{ host_fact_hostname }}"
        schema: vsphere
        properties:
          - guest.ipAddress
      register: nested_vm

    - name: Add host to group esxi
      ansible.builtin.add_host:
        name: '{{ host_fact_hostname }}'
        groups: esxi
        NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress }}"

  rescue:
    - name: "Deploy ESXi VM"
      community.vmware.vmware_deploy_ovf:
        url: "http://{{ httpova }}/{{ esxiova }}"
        power_on: false
        datacenter: "{{ vc_datacenter }}"
        name: '{{ host_fact_hostname }}'
        enable_hidden_properties: true
        folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
        datastore: "{{ vc_datastore }}"
        disk_provisioning: thin
        networks:
          "VM Network": "{{ vc_fact_deployment_network }}"
        wait_for_ip_address: true
        validate_certs: false
        inject_ovf_env: true
        properties:
          guestinfo.password: "{{ vc_fact_password }}" # SSO Password for administrator@vsphere.local

    - name: "Add disk to virtual machine {{ host_fact_hostname }} version {{ version }}"
      community.vmware.vmware_guest_disk:
        datacenter: "{{ vc_datacenter }}"
        name: "{{ host_fact_hostname }}"
        disk:
          - size_gb: "{{ esxidisk }}"
            type: thin
            datastore: "{{ vc_datastore }}"
            state: present
            scsi_controller: 0
            unit_number: 2

    - name: "MODIFY cpu/memory virtual machine {{ host_fact_hostname }} version {{ version }}"
      community.vmware.vmware_guest:
        datacenter: "{{ vc_datacenter }}"
        folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: present
        hardware:
          memory_mb: "{{ esximemory }}"
          num_cpus: "{{ esxicpu }}"
          num_cpu_cores_per_socket: "{{ esxicpu }}"
          nested_virt: true
          version: 21

- name: "Does ESXi virtual machine {{ host_fact_hostname }} exist"
  community.vmware.vmware_guest:
    datacenter: "{{ vc_datacenter }}"
    folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
    name: "{{ host_fact_hostname }}"
    state: present

- name: "poweron virtual machine {{ host_fact_hostname }} version {{ version }}"
  community.vmware.vmware_guest:
    datacenter: "{{ vc_datacenter }}"
    folder: "{{ vc_datacenter }}/vm/{{ vc_folder }}"
    name: "{{ host_fact_hostname }}"
    state: poweredon
  register: presults

- name: Retrieve guest info
  community.vmware.vmware_guest_info:
    name: "{{ host_fact_hostname }}"
    datacenter: "{{ vc_datacenter }}"
  register: guest_info
  until: guest_info.instance.guest_tools_status == "guestToolsRunning"
  retries: 120
  delay: 5

- name: Show guest info
  ansible.builtin.debug:
    msg: "{{ guest_info }}"

- name: "Does ESXi virtual machine {{ host_fact_hostname }} exist get ip"
  community.vmware.vmware_guest_info:
    datacenter: "{{ vc_datacenter }}"
    name: "{{ host_fact_hostname }}"
    schema: vsphere
    properties:
      - guest.ipAddress
  register: nested_vm

- name: Add host to group esxi
  ansible.builtin.add_host:
    name: '{{ host_fact_hostname }}'
    groups: esxi
    NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress }}"

- name: "*** Wait for {{ hostvars[groups['esxi'][my_idx]].inventory_hostname }} {{ hostvars[groups['esxi'][my_idx]].NESTEDVMIP }} install of ESXi on host to be complete"
  ansible.builtin.wait_for:
    host: "{{ hostvars[groups['esxi'][my_idx]].NESTEDVMIP }}"
    port: 443
    sleep: 10
    timeout: 900
